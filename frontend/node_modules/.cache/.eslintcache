<<<<<<< Updated upstream
[{"C:\\airfly\\frontend\\src\\index.js":"1","C:\\airfly\\frontend\\src\\reportWebVitals.js":"2","C:\\airfly\\frontend\\src\\data\\airports.js":"3","C:\\airfly\\frontend\\src\\App.js":"4","C:\\airfly\\frontend\\src\\components\\LoginForm.js":"5","C:\\airfly\\frontend\\src\\components\\RegisterForm.js":"6","C:\\airfly\\frontend\\src\\components\\HomePage.js":"7","C:\\airfly\\frontend\\src\\components\\SearchPage.js":"8","C:\\airfly\\frontend\\src\\utils\\authService.js":"9","C:\\airfly\\frontend\\src\\components\\BookingForm.js":"10","C:\\airfly\\frontend\\src\\components\\PaymentForm.js":"11","C:\\airfly\\frontend\\src\\components\\PaymentSuccess.js":"12"},{"size":535,"mtime":1699838962486,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1699838962819,"results":"15","hashOfConfig":"14"},{"size":977,"mtime":1701037299243,"results":"16","hashOfConfig":"14"},{"size":1138,"mtime":1701758930759,"results":"17","hashOfConfig":"14"},{"size":2686,"mtime":1701760566239,"results":"18","hashOfConfig":"14"},{"size":3649,"mtime":1701761973512,"results":"19","hashOfConfig":"14"},{"size":232,"mtime":1701182032388,"results":"20","hashOfConfig":"14"},{"size":9388,"mtime":1701788926954,"results":"21","hashOfConfig":"14"},{"size":123,"mtime":1701193074660,"results":"22","hashOfConfig":"14"},{"size":1506,"mtime":1701758930763,"results":"23","hashOfConfig":"14"},{"size":5294,"mtime":1701758930765,"results":"24","hashOfConfig":"14"},{"size":460,"mtime":1701758930767,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r1gz39",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\airfly\\frontend\\src\\index.js",[],[],"C:\\airfly\\frontend\\src\\reportWebVitals.js",[],[],"C:\\airfly\\frontend\\src\\data\\airports.js",[],[],"C:\\airfly\\frontend\\src\\App.js",[],[],"C:\\airfly\\frontend\\src\\components\\LoginForm.js",[],[],"C:\\airfly\\frontend\\src\\components\\RegisterForm.js",[],[],"C:\\airfly\\frontend\\src\\components\\HomePage.js",["63"],[],"C:\\airfly\\frontend\\src\\components\\SearchPage.js",["64"],[],"import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport airportsData from '../data/airports'; // Importing airport data\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; \r\nimport { isAuthenticated } from '../utils/authService'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SearchPage = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n\r\n  // State to handle user selections and airport codes\r\n  const [search, setSearch] = useState({\r\n    fromCity: '',\r\n    toCity: '',\r\n    fromDate: '',\r\n    toAirportCode: '',\r\n    fromAirportCode: ''\r\n  });\r\n\r\n  // State to store flight data retrieved from the backend\r\n  const [flightsData, setFlightsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Set default cities and airports when the component mounts\r\n    const defaultFromCity = airportsData[0].city;\r\n    const defaultToCity = airportsData[1].city;\r\n    const defaultFromAirportCode = airportsData[0].airports[0].code;\r\n    const defaultToAirportCode = airportsData[1].airports[0].code;\r\n\r\n    setSearch({\r\n      fromCity: defaultFromCity,\r\n      toCity: defaultToCity,\r\n      fromDate: '',\r\n      fromAirportCode: defaultFromAirportCode,\r\n      toAirportCode: defaultToAirportCode\r\n    });\r\n  }, []);\r\n\r\n\r\n  // Handler for changes in city fields\r\n  const handleCityChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearch(prevSearch => ({\r\n      ...prevSearch,\r\n      [name]: value,\r\n      // Reset airport code when city changes\r\n      ...(name === 'fromCity' && { fromAirportCode: '' }),\r\n      ...(name === 'toCity' && { toAirportCode: '' })\r\n    }));\r\n  };\r\n\r\n  // Handler for changes in the number of passengers\r\nconst handlePassengersChange = (e) => {\r\n  const { name, value } = e.target;\r\n  setSearch((prevSearch) => ({\r\n    ...prevSearch,\r\n    [name]: value,\r\n  }));\r\n};\r\n\r\n\r\n  // Handler for changes in airport fields\r\n  const handleAirportChange = (e, cityType) => {\r\n    const airportName = e.target.value;\r\n    const cityData = airportsData.find(city => city.city === search[`${cityType}City`]);\r\n    \r\n    if (cityData) {\r\n      const airport = cityData.airports.find(airport => airport.name === airportName);\r\n      const airportCode = airport ? airport.code : '';\r\n\r\n      setSearch(prevSearch => ({\r\n        ...prevSearch,\r\n        [`${cityType}AirportCode`]: airportCode\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Function to fetch flight data from the backend\r\n  const fetchFlightsData = async (searchParams) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/search-flights', searchParams);\r\n      setFlightsData(response.data); // Storing the flight data\r\n    } catch (error) {\r\n      if (error.response) {\r\n          // La solicitud se hizo y el servidor respondi칩 con un estado fuera del rango 2xx\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n      } else if (error.request) {\r\n          // La solicitud se hizo pero no se recibi칩 respuesta\r\n          console.log(error.request);\r\n      } else {\r\n          // Algo m치s caus칩 el error\r\n          console.log('Error', error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handler for form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const submissionData = {\r\n      fromCity: search.fromCity,\r\n      fromAirportCode: search.fromAirportCode,\r\n      toCity: search.toCity,\r\n      toAirportCode: search.toAirportCode,\r\n      fromDate: search.fromDate\r\n    };\r\n    // Fetching flight data after form submission\r\n    fetchFlightsData(submissionData);\r\n\r\n    // Redirect to the booking page\r\n  };\r\n\r\n   // Function to handle the selection of a flight and navigation to the booking form\r\n   const handleSelectBooking = async (selectedFlight) => {\r\n    // Include flight ID in the submission data\r\n    const submissionWithId = {\r\n      ...selectedFlight,\r\n      id: selectedFlight._id,\r\n    };\r\n  \r\n    // Save the selected flight data into the state\r\n    setSelectedBooking(submissionWithId);\r\n  \r\n    // Navigate to the booking form\r\n    navigate('/booking-form', { state: { selectedFlight: submissionWithId } })\r\n      //.catch((error) => console.error('Error navigating to booking form:', error));\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"mb-4\">Flight Booking System</h1>\r\n      {isAuthenticated() ? (\r\n        <>\r\n          {/* Form only shown if user is authenticated */}\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Dropdown to select the departure city */}\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"fromCity\" className=\"form-label\">From City</label>\r\n              <select className=\"form-select\" name=\"fromCity\" onChange={handleCityChange} value={search.fromCity}>\r\n                {airportsData.map((entry, index) => (\r\n                  <option key={index} value={entry.city}>\r\n                    {entry.city}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Dropdown to select the departure airport if a city has been selected */}\r\n            {search.fromCity && (\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"fromAirport\" className=\"form-label\">From Airport</label>\r\n                <select className=\"form-select\" name=\"fromAirport\" onChange={(e) => handleAirportChange(e, 'from')}>\r\n                  {airportsData.find(city => city.city === search.fromCity).airports.map((airport, index) => (\r\n                    <option key={index} value={airport.name}>\r\n                      {airport.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {/* Dropdown to select the destination city */}\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"toCity\" className=\"form-label\">To City</label>\r\n              <select className=\"form-select\" name=\"toCity\" onChange={handleCityChange} value={search.toCity}>\r\n                {airportsData.map((entry, index) => (\r\n                  <option key={index} value={entry.city}>\r\n                    {entry.city}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Dropdown to select the destination airport if a city has been selected */}\r\n            {search.toCity && (\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"toAirport\" className=\"form-label\">To Airport</label>\r\n                <select className=\"form-select\" name=\"toAirport\" onChange={(e) => handleAirportChange(e, 'to')}>\r\n                  {airportsData.find(city => city.city === search.toCity).airports.map((airport, index) => (\r\n                    <option key={index} value={airport.name}>\r\n                      {airport.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {/* Input to select the date */}\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"fromDate\" className=\"form-label\">Date</label>\r\n              <input type=\"date\" className=\"form-control\" name=\"fromDate\" onChange={handleCityChange} value={search.fromDate} />\r\n            </div>\r\n\r\n            {/* Input to enter the number of passengers */}\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"passengers\" className=\"form-label\">Number of Passengers</label>\r\n              <input type=\"number\" className=\"form-control\" name=\"passengers\" onChange={handlePassengersChange} value={search.passengers} />\r\n            </div>\r\n\r\n            {/* Button to submit the form */}\r\n            {isAuthenticated() && (\r\n              <button type=\"submit\" className=\"btn btn-primary\">Search</button>\r\n            )}\r\n          </form>\r\n\r\n          {/* Displaying the flight data in a table */}\r\n          {flightsData.length > 0 && (\r\n            <table className=\"table mt-4\">\r\n            <thead>\r\n              <tr>\r\n                <th>Weekday</th>\r\n                <th>Departure</th>\r\n                <th>Arrival</th>\r\n                <th>Aircraft</th>\r\n                <th style={{width: '100px'}}>Book</th>\r\n                \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {flightsData.map((flight, index) => (\r\n                <tr key={index}>\r\n                  <td>{flight.weekday}</td>\r\n                  <td>{`${flight.departure.iataCode} - ${flight.departure.scheduledTime}`}</td>\r\n                  <td>{`${flight.arrival.iataCode} - ${flight.arrival.scheduledTime}`}</td>\r\n                  <td>{flight.aircraft.modelText}</td>\r\n                  <td>\r\n                  {isAuthenticated() && (\r\n                    <button \r\n                      className=\"btn btn-primary\"\r\n                      style={{marginLeft: 'auto', display: 'block'}}  \r\n                      onClick={() => handleSelectBooking(flight)}>\r\n                    Select\r\n                    </button>\r\n                  )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          )}\r\n        </>\r\n      ) : (\r\n        // Message shown if user is not authenticated\r\n        <p>User is not logged in</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;","C:\\airfly\\frontend\\src\\utils\\authService.js",[],[],"C:\\airfly\\frontend\\src\\components\\BookingForm.js",[],[],"C:\\airfly\\frontend\\src\\components\\PaymentForm.js",["65"],[],"C:\\airfly\\frontend\\src\\components\\PaymentSuccess.js",["66"],[],{"ruleId":"67","severity":1,"message":"68","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":10,"column":10,"nodeType":"69","messageId":"70","endLine":10,"endColumn":25},{"ruleId":"67","severity":1,"message":"72","line":14,"column":10,"nodeType":"69","messageId":"70","endLine":14,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":6,"column":7,"nodeType":"75","endLine":6,"endColumn":160},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'selectedBooking' is assigned a value but never used.","'bookingDetails' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]
=======
[{"C:\\airfly\\frontend\\src\\index.js":"1","C:\\airfly\\frontend\\src\\reportWebVitals.js":"2","C:\\airfly\\frontend\\src\\data\\airports.js":"3","C:\\airfly\\frontend\\src\\App.js":"4","C:\\airfly\\frontend\\src\\components\\LoginForm.js":"5","C:\\airfly\\frontend\\src\\components\\RegisterForm.js":"6","C:\\airfly\\frontend\\src\\components\\HomePage.js":"7","C:\\airfly\\frontend\\src\\components\\SearchPage.js":"8","C:\\airfly\\frontend\\src\\utils\\authService.js":"9","C:\\airfly\\frontend\\src\\components\\BookingForm.js":"10","C:\\airfly\\frontend\\src\\components\\PaymentForm.js":"11","C:\\airfly\\frontend\\src\\components\\PaymentSuccess.js":"12"},{"size":535,"mtime":1699838962486,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1699838962819,"results":"15","hashOfConfig":"14"},{"size":977,"mtime":1701037299243,"results":"16","hashOfConfig":"14"},{"size":1138,"mtime":1701877930854,"results":"17","hashOfConfig":"14"},{"size":3360,"mtime":1701835358489,"results":"18","hashOfConfig":"14"},{"size":3254,"mtime":1701835358569,"results":"19","hashOfConfig":"14"},{"size":232,"mtime":1701182032388,"results":"20","hashOfConfig":"14"},{"size":8165,"mtime":1701877930860,"results":"21","hashOfConfig":"14"},{"size":123,"mtime":1701193074660,"results":"22","hashOfConfig":"14"},{"size":1506,"mtime":1701877930856,"results":"23","hashOfConfig":"14"},{"size":5294,"mtime":1701877930857,"results":"24","hashOfConfig":"14"},{"size":460,"mtime":1701877930858,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r1gz39",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\airfly\\frontend\\src\\index.js",[],[],"C:\\airfly\\frontend\\src\\reportWebVitals.js",[],[],"C:\\airfly\\frontend\\src\\data\\airports.js",[],[],"C:\\airfly\\frontend\\src\\App.js",[],[],"C:\\airfly\\frontend\\src\\components\\LoginForm.js",[],[],"C:\\airfly\\frontend\\src\\components\\RegisterForm.js",["65"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios'; // Make sure to install axios with `npm install axios`\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n// RegisterForm component handles the user registration process\r\nconst RegisterForm = () => {\r\n  // State to store user registration data\r\n  const [registrationData, setRegistrationData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  // Handles input changes and updates state\r\n  const handleChange = (e) => {\r\n    setRegistrationData({\r\n      ...registrationData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // Handles the form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send a POST request to the register endpoint with the registration data\r\n      const response = await axios.post('http://localhost:3001/register', registrationData);\r\n      // Handle the response, e.g., notify the user of successful registration\r\n      // Redirect to login page or auto-login the user\r\n    } catch (error) {\r\n      // Handle errors, e.g., show error message to the user\r\n      console.error(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          \r\n          <h1 className=\"text-center mb-4\">Register</h1>\r\n\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n\r\n              <form onSubmit={handleSubmit}>\r\n              \r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Username</label>\r\n\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"form-control\" \r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    value={registrationData.username}\r\n                    onChange={handleChange}                 \r\n                  />\r\n                \r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                \r\n                  <input \r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={registrationData.email}\r\n                    onChange={handleChange}                 \r\n                  />\r\n              \r\n                </div>\r\n              \r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Password</label>\r\n                \r\n                  <input \r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={registrationData.password}\r\n                    onChange={handleChange}                 \r\n                  />\r\n              \r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Register \r\n                </button>\r\n\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;",["66","67","68","69","70","71"],"C:\\airfly\\frontend\\src\\components\\HomePage.js",["72"],[],"C:\\airfly\\frontend\\src\\components\\SearchPage.js",["73"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport airportsData from '../data/airports'; // Importing airport data\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; \r\nimport { isAuthenticated } from '../utils/authService'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SearchPage = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n\r\n  // State to handle user selections and airport codes\r\n  const [search, setSearch] = useState({\r\n    fromCity: '',\r\n    toCity: '',\r\n    fromDate: '',\r\n    toAirportCode: '',\r\n    fromAirportCode: ''\r\n  });\r\n\r\n  // State to store flight data retrieved from the backend\r\n  const [flightsData, setFlightsData] = useState([]);\r\n\r\n  // Handler for changes in city fields\r\n  const handleCityChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearch(prevSearch => ({\r\n      ...prevSearch,\r\n      [name]: value,\r\n      // Reset airport code when city changes\r\n      ...(name === 'fromCity' && { fromAirportCode: '' }),\r\n      ...(name === 'toCity' && { toAirportCode: '' })\r\n    }));\r\n  };\r\n\r\n  // Handler for changes in the number of passengers\r\nconst handlePassengersChange = (e) => {\r\n  const { name, value } = e.target;\r\n  setSearch((prevSearch) => ({\r\n    ...prevSearch,\r\n    [name]: value,\r\n  }));\r\n};\r\n\r\n\r\n  // Handler for changes in airport fields\r\n  const handleAirportChange = (e, cityType) => {\r\n    const airportName = e.target.value;\r\n    const cityData = airportsData.find(city => city.city === search[`${cityType}City`]);\r\n    const airportCode = cityData.airports.find(airport => airport.name === airportName).code;\r\n\r\n    setSearch(prevSearch => ({\r\n      ...prevSearch,\r\n      [`${cityType}AirportCode`]: airportCode\r\n    }));\r\n  };\r\n\r\n  // Function to fetch flight data from the backend\r\n  const fetchFlightsData = async (searchParams) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/search-flights', searchParams);\r\n      setFlightsData(response.data); // Storing the flight data\r\n    } catch (error) {\r\n      if (error.response) {\r\n          // La solicitud se hizo y el servidor respondi칩 con un estado fuera del rango 2xx\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n      } else if (error.request) {\r\n          // La solicitud se hizo pero no se recibi칩 respuesta\r\n          console.log(error.request);\r\n      } else {\r\n          // Algo m치s caus칩 el error\r\n          console.log('Error', error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handler for form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const submissionData = {\r\n      fromCity: search.fromCity,\r\n      fromAirportCode: search.fromAirportCode,\r\n      toCity: search.toCity,\r\n      toAirportCode: search.toAirportCode,\r\n      fromDate: search.fromDate\r\n    };\r\n    // Fetching flight data after form submission\r\n    fetchFlightsData(submissionData);\r\n\r\n    // Redirect to the booking page\r\n  };\r\n\r\n   // Function to handle the selection of a flight and navigation to the booking form\r\n   const handleSelectBooking = async (selectedFlight) => {\r\n    // Include flight ID in the submission data\r\n    const submissionWithId = {\r\n      ...selectedFlight,\r\n      id: selectedFlight._id,\r\n    };\r\n  \r\n    // Save the selected flight data into the state\r\n    setSelectedBooking(submissionWithId);\r\n  \r\n    // Navigate to the booking form\r\n    navigate('/booking-form', { state: { selectedFlight: submissionWithId } })\r\n      //.catch((error) => console.error('Error navigating to booking form:', error));\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"mb-4\">Flight Booking System</h1>\r\n      <form onSubmit={handleSubmit}>\r\n  \r\n        {/* Dropdown to select the departure city */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"fromCity\" className=\"form-label\">From City</label>\r\n          <select className=\"form-select\" name=\"fromCity\" onChange={handleCityChange} value={search.fromCity}>\r\n            {airportsData.map((entry, index) => (\r\n              <option key={index} value={entry.city}>\r\n                {entry.city}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n  \r\n        {/* Dropdown to select the departure airport if a city has been selected */}\r\n        {search.fromCity && (\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"fromAirport\" className=\"form-label\">From Airport</label>\r\n            <select className=\"form-select\" name=\"fromAirport\" onChange={(e) => handleAirportChange(e, 'from')}>\r\n              {airportsData.find(city => city.city === search.fromCity).airports.map((airport, index) => (\r\n                <option key={index} value={airport.name}>\r\n                  {airport.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Dropdown to select the destination city */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"toCity\" className=\"form-label\">To City</label>\r\n          <select className=\"form-select\" name=\"toCity\" onChange={handleCityChange} value={search.toCity}>\r\n            {airportsData.map((entry, index) => (\r\n              <option key={index} value={entry.city}>\r\n                {entry.city}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n  \r\n        {/* Dropdown to select the destination airport if a city has been selected */}\r\n        {search.toCity && (\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"toAirport\" className=\"form-label\">To Airport</label>\r\n            <select className=\"form-select\" name=\"toAirport\" onChange={(e) => handleAirportChange(e, 'to')}>\r\n              {airportsData.find(city => city.city === search.toCity).airports.map((airport, index) => (\r\n                <option key={index} value={airport.name}>\r\n                  {airport.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n  \r\n        {/* Input to select the date */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"fromDate\" className=\"form-label\">Date</label>\r\n          <input type=\"date\" className=\"form-control\" name=\"fromDate\" onChange={handleCityChange} value={search.fromDate} />\r\n        </div>\r\n  \r\n        {/* Input to enter the number of passengers */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"passengers\" className=\"form-label\">Number of Passengers</label>\r\n          <input type=\"number\" className=\"form-control\" name=\"passengers\" onChange={handlePassengersChange} value={search.passengers} />\r\n        </div>\r\n  \r\n        {/* Button to submit the form */}\r\n        <button type=\"submit\" className=\"btn btn-primary\">Search</button>\r\n      </form>\r\n  \r\n      {/* Displaying the flight data in a table */}\r\n      {flightsData.length > 0 && (\r\n        <table className=\"table mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th>Weekday</th>\r\n              <th>Departure</th>\r\n              <th>Arrival</th>\r\n              <th>Aircraft</th>\r\n              <th style={{width: '100px'}}>Book</th>\r\n              \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {flightsData.map((flight, index) => (\r\n              <tr key={index}>\r\n                <td>{flight.weekday}</td>\r\n                <td>{`${flight.departure.iataCode} - ${flight.departure.scheduledTime}`}</td>\r\n                <td>{`${flight.arrival.iataCode} - ${flight.arrival.scheduledTime}`}</td>\r\n                <td>{flight.aircraft.modelText}</td>\r\n                <td>\r\n                {isAuthenticated() && (\r\n                  <button \r\n                    className=\"btn btn-primary\"\r\n                    style={{marginLeft: 'auto', display: 'block'}}  \r\n                    onClick={() => handleSelectBooking(flight)}>\r\n                  Select\r\n                  </button>\r\n                )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default SearchPage;\r\n","C:\\airfly\\frontend\\src\\utils\\authService.js",[],[],"C:\\airfly\\frontend\\src\\components\\BookingForm.js",[],[],"C:\\airfly\\frontend\\src\\components\\PaymentForm.js",["74"],[],"C:\\airfly\\frontend\\src\\components\\PaymentSuccess.js",["75"],[],{"ruleId":"76","severity":1,"message":"77","line":28,"column":13,"nodeType":"78","messageId":"79","endLine":28,"endColumn":21},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"76","severity":1,"message":"92","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"93","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":25},{"ruleId":"76","severity":1,"message":"94","line":14,"column":10,"nodeType":"78","messageId":"79","endLine":14,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":6,"column":7,"nodeType":"97","endLine":6,"endColumn":160},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["98"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"'Link' is defined but never used.","'selectedBooking' is assigned a value but never used.","'bookingDetails' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-object-constructor"]
>>>>>>> Stashed changes
